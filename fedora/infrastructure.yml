---
- name: Set up some Infrastructure / DevOps tools
  hosts: localhost
  become_user: "{{ username }}"
  tasks:
    - name: install packages
      become: True
      become_user: root
      package: name={{ item }}
               state=present
      with_items:
        - pipenv
        - python2-pip
        - python2-virtualenv

    - name: install aws-cli
      pip:
        name: awscli
        extra_args: --upgrade --user

    - name: ensure the ~/bin directory is present
      file: path=/home/{{ username }}/bin
            state=directory

    - name: ensure the ~/src directory is present
      file: path=/home/{{ username }}/src
            state=directory

    - name: ensure the ~/.terraform.d/plugins directory is present
      file: path=/home/{{ username }}/.terraform.d/plugins
            state=directory

    - name: download terraform zipfile
      get_url:
        url: https://releases.hashicorp.com/terraform/0.11.7/terraform_0.11.7_linux_amd64.zip
        dest: /home/{{ username }}/src/

    - name: unzip terraform
      unarchive:
        src: /home/{{ username }}/src/terraform_0.11.7_linux_amd64.zip
        dest: /home/{{ username }}/src/
        remote_src: True

    - name: symlink to terraform bin
      file:
        src: /home/{{ username }}/src/terraform
        dest: /home/{{ username }}/bin/terraform
        state: link

    - name: download terraform-provider-ct tarfile
      get_url:
        url: https://github.com/coreos/terraform-provider-ct/releases/download/v0.3.0/terraform-provider-ct-v0.3.0-linux-amd64.tar.gz
        dest: /home/{{ username }}/src/

    - name: untar terraform-provider-ct
      unarchive:
        src: /home/{{ username }}/src/terraform-provider-ct-v0.3.0-linux-amd64.tar.gz
        dest: /home/{{ username }}/src/
        remote_src: True

    - name: symlink to terraform-provider-ct bin
      file:
        src: /home/{{ username }}/src/terraform-provider-ct-v0.3.0-linux-amd64/terraform-provider-ct
        dest: /home/{{ username }}/.terraform.d/plugins/terraform-provider-ct
        state: link

    - name: download get_helm script
      get_url:
        url: https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get
        dest: /home/{{ username }}/src/get_helm.sh
        mode: 0700

    - name: execute the get_helm script
      shell: /home/{{ username }}/src/get_helm.sh
      args:
        executable: /bin/bash
        creates: /usr/local/bin/helm

    - name: add the google cloud repository
      become: True
      become_user: root
      yum_repository:
        baseurl: https://packages.cloud.google.com/yum/repos/cloud-sdk-el7-x86_64
        description: Google Cloud SDK
        enabled: yes
        gpgcheck: yes
        gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg
        name: google-cloud-sdk
        repo_gpgcheck: yes

    - name: remove kubernetes-client
      become: True
      become_user: root
      package:
        name: kubernetes-client
        state: absent

    - name: upgrade all packages
      become: True
      become_user: root
      package:
        name: "*"
        state: latest

    - name: install google cloud sdk packages
      become: True
      become_user: root
      package: name={{ item }}
               state=present
      with_items:
        - golang-github-googlecloudplatform-cloudsql-proxy
        - google-cloud-sdk
        - kubectl

